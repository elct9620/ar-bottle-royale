default:
  image: ruby:2.6.6

stages:
  - lint
  - build
  - package
  - deploy

variables:
  RAILS_ENV: test
  NODE_VERSION: 12.13.1
  BUNDLER_VERSION: 2.1.4
  POSTGRES_DB: the-final-hope
  POSTGRES_PASSWORD: postgres
  DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/$POSTGRES_DB"

.install_ruby_gems: &install_ruby_gems
  - gem install bundler -v ${BUNDLER_VERSION}
  - bundle install --path vendor

.install_nodejs: &install_nodejs
  - curl -SLO https://nodejs.org/dist/v$NODE_VERSION/node-v${NODE_VERSION}-linux-x64.tar.xz && tar -xJf node-v${NODE_VERSION}-linux-x64.tar.xz -C /usr/local --strip-components=1;
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH
  - yarn install

.common:
  before_script:
    - export LANG=C.UTF-8
    - export LC_ALL=C.UTF-8
    - *install_ruby_gems
  cache:
    key:
      files:
        - Gemfile.lock
        - yarn.lock
    paths:
      - vendor/ruby
      - node_modules

.docker: &docker
  image: docker:stable
  cache: {}
  services:
    - docker:18.06.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk -Uuv add bash git curl tar sed grep

rubocop:
  extends: .common
  stage: lint
  script:
    - bundle exec rubocop
  except:
    - schedules

brakeman:
  extends: .common
  stage: lint
  script:
    - bundle exec brakeman
  except:
    - schedules

bundler-audit:
  extends: .common
  stage: lint
  script:
    - gem install bundler-audit
    - bundle audit --update
    - bundle audit
  only:
    changes:
      - Gemfile
      - Gemfile.lock
  allow_failure: true

bundler-leak:
  extends: .common
  stage: lint
  script:
    - gem install bundler-leak
    - bundle leak check --update
    - bundle leak
  only:
    changes:
      - Gemfile
      - Gemfile.lock
  allow_failure: true

yarn-audit:
  extends: .common
  stage: lint
  before_script:
    - *install_nodejs
  script:
    - yarn audit
  only:
    changes:
      - package.json
      - package-lock.json
      - yarn.lock
  allow_failure: true

docker:assets:
  extends: .common
  stage: build
  variables:
    RAILS_ENV: production
  before_script:
    - *install_nodejs
    - *install_ruby_gems
    - yarn install
  services:
    - postgres:12-alpine
  script:
    - bundle exec rake assets:precompile
  artifacts:
    paths:
      - public/packs
      - public/assets
  only:
    - master
    - tags

docker:rails:
  extends: .docker
  stage: package
  script:
    - docker pull $CI_REGISTRY_IMAGE:gems || true
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
    - docker build
      --target gem
      --cache-from $CI_REGISTRY_IMAGE:gems
      --tag $CI_REGISTRY_IMAGE:gems .
    - docker build
      --cache-from $CI_REGISTRY_IMAGE:gems
      --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:gems
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - |
      VERSION=$(
      curl --silent "https://api.github.com/repos/goodwithtech/dockle/releases/latest" | \
      grep '"tag_name":' | \
      sed -E 's/.*"v([^"]+)".*/\1/' \
      ) && curl -L -o dockle.tar.gz https://github.com/goodwithtech/dockle/releases/download/v${VERSION}/dockle_${VERSION}_Linux-64bit.tar.gz &&  \
      tar zxvf dockle.tar.gz
    - ./dockle --exit-code 1 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG $CI_REGISTRY_IMAGE:latest; fi
    - if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then docker push $CI_REGISTRY_IMAGE:latest; fi
  needs:
    - job: docker:assets
      artifacts: true
  only:
    - master
    - tags
